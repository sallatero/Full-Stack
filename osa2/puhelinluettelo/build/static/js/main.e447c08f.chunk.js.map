{"version":3,"sources":["components/Numerot.js","components/Uusi.js","components/Rajaa.js","services/persons.js","components/Kayttajaviestit.js","App.js","index.js"],"names":["Person","props","react_default","a","createElement","person","name","number","onClick","remove","Numerot","console","log","persons","search","reg","RegExp","filtered","filter","test","className","map","Numerot_Person","key","id","removeId","Uusi","onSubmit","handleSubmit","type","value","newName","onChange","changeName","newNro","changeNro","Rajaa","handler","baseUrl","services_persons","axios","get","then","resp","data","newObject","post","put","concat","delete","Kayttajaviestit","_ref","message","err","style","margin","color","fontSize","border","borderWidth","borderRadius","backgroundColor","borderColor","padding","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNro","_useState7","_useState8","setSearch","_useState9","_useState10","setMessage","_useState11","_useState12","setErr","useEffect","personService","initialPersons","length","reset","components_Kayttajaviestit","components_Rajaa","event","target","components_Uusi","preventDefault","undefined","find","e","localeCompare","sensitivity","returnedPers","setTimeout","window","confirm","pers","p","modifiedPers","objectSpread","catch","error","allPersons","components_Numerot","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e447c08f.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Numerot = (props) => {\n    console.log('Numerot alussa: ', props.persons);\n    console.log('Search: ', props.search);\n\n    //Tehdään uusi taulukko, jossa vain hakua vastaavat nimet\n    let reg = new RegExp(props.search, 'i')\n    console.log('reg: ', reg);\n    let filtered = props.persons.filter(person => reg.test(person.name))\n    console.log('filtered: ', filtered);\n    \n    return (\n        <div className=\"name-list\">\n             {filtered.map(person => <Person key={person.id} person={person} remove={() => props.removeId(person.id)}/>)}\n        </div>\n    )\n}\n\nconst Person = (props) => {\n    return (\n        <p>{props.person.name}: {props.person.number}<button onClick={props.remove}>poista</button></p>\n    )\n}\n\n/*\nconst Poistonappi = (props) => {\n    //onClickille pitää antaa funktio, eli () => tapahtumankästehdas(id)\n    return <button onClick={() => props.removeId(props.id)}>poista</button>\n}*/\n\nexport default Numerot","import React from 'react';\n\nconst Uusi = (props) => {\n    return (\n      <div>\n        <form onSubmit={props.handleSubmit}>\n          <div>\n            nimi: <input type=\"text\" value={props.newName} onChange={props.changeName}/>\n            numero: <input type=\"text\" value={props.newNro} onChange={props.changeNro}/>\n          </div>\n          <div>\n            <button type=\"submit\">lisää</button>\n          </div>\n        </form>\n      </div>\n    )\n}\n\nexport default Uusi","import React from 'react';\n\nconst Rajaa = (props) => {\n    return (\n        <div>\n        rajaa näytettäviä: <input type=\"text\" value={props.search} onChange={props.handler}/>\n        </div>\n    )\n}\n\nexport default Rajaa","import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/api/persons'\n//const baseUrl = 'https://limitless-shelf-77066.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\n//Puhelinluettelo Frontendin palvelinkeskustelija\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(resp => resp.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(resp => resp.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(resp => resp.data)\n}\n\n//Poisto tapahtuu HTTP DELETE-pyynnöllä resurssin osoitteeseen, ei tarvi lähettää dataa\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(resp => resp.data)\n}\n\nexport default {getAll, create, update, remove}","import React from 'react';\n\nconst Kayttajaviestit = ({message, err}) => {\n    const styleOk = {\n        margin: 15,\n        color: 'green',\n        fontSize: 20,\n        border: 'solid',\n        borderWidth: 3,\n        borderRadius: 10,\n        backgroundColor: '#D0D0D0', \n        borderColor: 'green', \n        padding: 10\n    }\n    const styleErr = {\n        margin: 15,\n        color: 'red',\n        fontSize: 20,\n        border: 'solid',\n        borderWidth: 3,\n        borderRadius: 10,\n        backgroundColor: '#D0D0D0', \n        borderColor: 'red', \n        padding: 10\n    }\n\n    if (message === '') {\n       return null\n    }\n\n    return (\n        <div style={err ? styleErr : styleOk}>{message}\n        </div>\n    )\n}\n\nexport default Kayttajaviestit","import React, {useState, useEffect} from 'react';\nimport Numerot from './components/Numerot'\nimport Uusi from './components/Uusi'\nimport Rajaa from './components/Rajaa'\nimport personService from './services/persons'\nimport Kayttajaviestit from './components/Kayttajaviestit'\n\n//Puhelinluettelo Frontend\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNro, setNewNro] = useState('')\n    const [search, setSearch] = useState('')\n    const [message, setMessage] = useState('')\n    const [err, setErr] = useState(false)\n\n    //Haetaan data palvelimelta\n    useEffect(() => {\n        console.log('effect')\n        personService\n        .getAll()\n        .then(initialPersons => {\n            console.log('promise fulfilled')\n            setPersons(initialPersons)\n        })\n    }, [])\n    console.log('render', persons.length, 'persons');\n    \n    const handleChangeName = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleChangeNro = (event) => {\n        setNewNro(event.target.value)\n    }\n    const handleChangeSearch= (event) => {\n        setSearch(event.target.value)\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        \n        //Tarkistetaan onko nimi jo taulukossa\n        let is = persons.find(e => 0 === newName.localeCompare(e.name, undefined, {sensitivity: 'base'}))\n        if (is === undefined){ //Jos ei, tallennetaan suoraan\n            const obj = {\n                name: newName,\n                number: newNro\n            } \n            personService\n            .create(obj)\n            .then(returnedPers => {\n                setPersons(persons.concat(returnedPers))\n                setMessage(`Lisättiin ${returnedPers.name}`)\n                setErr(false)\n                setTimeout(() => {\n                    setMessage('')\n                }, 5000)\n            })\n          }else{\n            console.log('Nimi on jo.')\n            //Käyttäjän täytyy vahvistaa\n            const answer = window.confirm(`${newName} on jo luettelossa. Korvataanko vanha numero uudella?`)\n            if (answer) { //Korvataan\n                //Haetaan person jolla sama nimi\n                const pers = persons.find(p => p.name === newName)\n                //Luodaan uusi olio, joka on kopio mutta muutetaan numero\n                const modifiedPers = {...pers, number: newNro}\n                personService\n                .update(pers.id, modifiedPers)\n                .then(returnedPers => {\n                    setPersons(persons.map(p => p.id !== pers.id ? p : returnedPers))\n                    setMessage(`Käyttäjän ${newName} numero päivitettiin`)\n                    setErr(false)\n                    setTimeout(() => {\n                        setMessage('')\n                    }, 5000)\n                })\n                .catch(error => {\n                    setMessage(`Käyttäjä ${newName} oli jo poistettu.`)\n                    setErr(true)\n                    setTimeout(() => {\n                        setMessage('')\n                    }, 5000)\n                    //Renderöinti??\n                    personService\n                    .getAll()\n                    .then(allPersons => {\n                        console.log('LADATAAN PALVELIMELTA')\n                        setPersons(allPersons)\n                    }) \n                })\n            }\n          }\n          reset()\n    }\n    //Resetoi tilassa olevat kentät newName ja newNro\n    const reset = () => {\n        setNewName('')\n        setNewNro('')\n    }\n\n    const removeId = id => {\n        console.log(`tyyppiä jonka id on ${id} halutaan poistaa`)\n        //Pyydetään käyttäjää varmistamaan\n        const p = persons.filter(p => p.id === id)\n        const name = p[0].name\n        const answer = window.confirm(`Poistetaanko ${name}?`)\n        if (answer) {\n            const url = `http://localhost:3001/persons/${id}`\n            personService\n            .remove(id)\n            .then(resp => {\n                console.log(resp)\n                setPersons(persons.filter(p => p.id !== id))\n                setMessage(`Poistettiin ${name}`)\n                setErr(false)\n                setTimeout(() => {\n                    setMessage('')\n                }, 5000)\n            })\n            .catch(error => {\n                setMessage(`Käyttäjä ${newName} oli jo poistettu.`)\n                setErr(true)\n                setTimeout(() => {\n                    setMessage('')\n                }, 5000)\n            })\n        } else {\n            console.log('peruutettiin');\n        }\n    }\n\n    return (\n        <div>\n            <h1>Puhelinluettelo   sdsds</h1>\n            <Kayttajaviestit message={message} err={err}/>\n            <Rajaa search={search} handler={handleChangeSearch}/>\n            <h2>Lisää uusi</h2>\n            <Uusi handleSubmit={handleSubmit} newName={newName} newNro={newNro} changeName={handleChangeName} changeNro={handleChangeNro}/>\n            <h2>Numerot</h2>\n            <Numerot persons={persons} search={search} removeId={removeId}/>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}