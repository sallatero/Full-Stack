{"version":3,"sources":["components/Numerot.js","components/Uusi.js","components/Rajaa.js","services/persons.js","components/Kayttajaviestit.js","App.js","index.js"],"names":["Person","props","react_default","a","createElement","Table","Row","Cell","person","name","number","Button","compact","floated","onClick","remove","Numerot","console","log","persons","search","reg","RegExp","filtered","filter","test","Segment","fluid","inverted","color","textAlign","padded","Header","as","columns","collapsing","Body","map","Numerot_Person","key","id","removeId","Uusi","Form","onSubmit","handleSubmit","Group","widths","FormField","control","placeholder","type","value","newName","onChange","changeName","newNro","changeNro","Rajaa","handler","baseUrl","services_persons","axios","get","then","resp","data","newObject","post","put","concat","delete","Kayttajaviestit","_ref","message","err","style","margin","fontSize","border","borderWidth","borderRadius","backgroundColor","borderColor","padding","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNro","_useState7","_useState8","setSearch","_useState9","_useState10","setMessage","_useState11","_useState12","setErr","useEffect","personService","initialPersons","length","reset","Container","text","Grid","Column","components_Kayttajaviestit","components_Rajaa","event","target","components_Uusi","preventDefault","undefined","find","e","localeCompare","sensitivity","returnedPers","setTimeout","catch","error","response","window","confirm","pers","p","modifiedPers","objectSpread","allPersons","components_Numerot","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.92b56ba0.chunk.js","sourcesContent":["import React from 'react';\nimport { Segment, Table, Button, Header } from 'semantic-ui-react';\n\n\nconst Numerot = (props) => {\n    console.log('Numerot alussa: ', props.persons);\n    console.log('Search: ', props.search);\n\n    //Tehd채채n uusi taulukko, jossa vain hakua vastaavat nimet\n    let reg = new RegExp(props.search, 'i')\n    console.log('reg: ', reg);\n    let filtered = props.persons.filter(person => reg.test(person.name))\n    console.log('filtered: ', filtered);\n    \n    return (\n      <Segment fluid inverted color='violet' textAlign='center' padded='very'>\n        <Header as='h3'>Numerot</Header>\n        <Table inverted color='violet' columns='3' collapsing fluid textAlign='center'>\n          <Table.Body>\n            {filtered.map(person => <Person key={person.id} person={person} remove={() => props.removeId(person.id)}/>)}\n          </Table.Body>\n        </Table>\n      </Segment>\n    )\n}\n\nconst Person = (props) => {\n    return (\n     <Table.Row>\n       <Table.Cell>\n        {props.person.name}\n       </Table.Cell>\n       <Table.Cell>\n        {props.person.number}\n       </Table.Cell>\n       <Table.Cell>\n        <Button compact floated='right' onClick={props.remove}>Poista</Button>\n       </Table.Cell>\n     </Table.Row>\n    )\n}\n\nexport default Numerot","import React from 'react';\nimport { Form, FormField, Header, Button } from 'semantic-ui-react';\n\n/*\n<label>Nimi</label>\n            <input type='text' placeholder='Etunimi ja sukunimi' \n              value={props.newName} onChange={props.changeName} />\n*/\nconst Uusi = (props) => {\n    return (\n      <Form onSubmit={props.handleSubmit}>\n        <Header as='h3'>Lis채채 uusi</Header>\n        <Form.Group widths='equal'> \n          <FormField control='input' placeholder='Etunimi ja sukunimi' fluid='true' type='text' value={props.newName} onChange={props.changeName} />           \n          <FormField control='input' placeholder='Puhelinnumero' fluid='true' type='text' value={props.newNro} onChange={props.changeNro} />\n        </Form.Group>\n        <Button fluid type='submit'>Tallenna</Button>\n      </Form>\n    )\n}\n\nexport default Uusi","import React from 'react';\nimport { Form, FormField, Header } from 'semantic-ui-react'\n\nconst Rajaa = (props) => {\n    return (\n      <Form>\n        <FormField fluid='true'>\n          <Header as='h3'>Rajaa nimi채</Header>\n          <input type='text' placeholder='Kirjoita nimen alku' \n            value={props.search} onChange={props.handler} />\n        </FormField>\n      </Form>\n    )\n}\n\nexport default Rajaa","import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/api/persons'\n//const baseUrl = 'https://dry-meadow-49016.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\n//Puhelinluettelo Frontendin palvelinkeskustelija\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(resp => resp.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(resp => resp.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(resp => resp.data)\n}\n\n//Poisto tapahtuu HTTP DELETE-pyynn철ll채 resurssin osoitteeseen, ei tarvi l채hett채채 dataa\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(resp => resp.data)\n}\n\nexport default {getAll, create, update, remove}","import React from 'react';\n\nconst Kayttajaviestit = ({message, err}) => {\n    const styleOk = {\n        margin: 15,\n        color: 'green',\n        fontSize: 20,\n        border: 'solid',\n        borderWidth: 3,\n        borderRadius: 10,\n        backgroundColor: '#D0D0D0', \n        borderColor: 'green', \n        padding: 10\n    }\n    const styleErr = {\n        margin: 15,\n        color: 'red',\n        fontSize: 20,\n        border: 'solid',\n        borderWidth: 3,\n        borderRadius: 10,\n        backgroundColor: '#D0D0D0', \n        borderColor: 'red', \n        padding: 10\n    }\n\n    if (message === '') {\n       return null\n    }\n\n    return (\n        <div style={err ? styleErr : styleOk}>{message}\n        </div>\n    )\n}\n\nexport default Kayttajaviestit","import React, {useState, useEffect} from 'react';\nimport Numerot from './components/Numerot'\nimport Uusi from './components/Uusi'\nimport Rajaa from './components/Rajaa'\nimport personService from './services/persons'\nimport Kayttajaviestit from './components/Kayttajaviestit'\nimport { Container, Segment, Header, Grid } from 'semantic-ui-react'\nimport './index.css'\n\n//Puhelinluettelo Frontend\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNro, setNewNro] = useState('')\n    const [search, setSearch] = useState('')\n    const [message, setMessage] = useState('')\n    const [err, setErr] = useState(false)\n\n    //Haetaan data palvelimelta\n    useEffect(() => {\n        console.log('effect')\n        personService\n        .getAll()\n        .then(initialPersons => {\n            console.log('promise fulfilled')\n            setPersons(initialPersons)\n        })\n    }, [])\n    console.log('render', persons.length, 'persons');\n    \n    const handleChangeName = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleChangeNro = (event) => {\n        setNewNro(event.target.value)\n    }\n    const handleChangeSearch= (event) => {\n        setSearch(event.target.value)\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log('handleSubmitiss채');\n        //Tarkistetaan onko nimi jo taulukossa\n        let is = persons.find(e => 0 === newName.localeCompare(e.name, undefined, {sensitivity: 'base'}))\n        if (is === undefined){ //Jos ei, tallennetaan suoraan\n            const obj = {\n                name: newName,\n                number: newNro\n            } \n            personService\n            .create(obj)\n            .then(returnedPers => {\n                console.log('uusi nimi lis채ttiin');\n                setPersons(persons.concat(returnedPers))\n                setMessage(`Lis채ttiin ${returnedPers.name}`)\n                setErr(false)\n                setTimeout(() => {\n                    setMessage('')\n                }, 5000)\n            })\n            .catch(error => {\n                console.log('Frontendist채');\n                console.log('Frontendist채: ', error.response.data)\n                setMessage(`Lis채ys ei onnistunut: ${error.response.data.error}`)\n                setErr(true)\n                setTimeout(() => {\n                    setMessage('')\n                }, 5000)\n            })\n          }else{\n            console.log('Nimi on jo.')\n            //K채ytt채j채n t채ytyy vahvistaa\n            const answer = window.confirm(`${newName} on jo luettelossa. Korvataanko vanha numero uudella?`)\n            if (answer) { //Korvataan\n                //Haetaan person jolla sama nimi\n                const pers = persons.find(p => p.name === newName)\n                //Luodaan uusi olio, joka on kopio mutta muutetaan numero\n                const modifiedPers = {...pers, number: newNro}\n                personService\n                .update(pers.id, modifiedPers)\n                .then(returnedPers => {\n                    setPersons(persons.map(p => p.id !== pers.id ? p : returnedPers))\n                    setMessage(`K채ytt채j채n ${newName} numero p채ivitettiin`)\n                    setErr(false)\n                    setTimeout(() => {\n                        setMessage('')\n                    }, 5000)\n                })\n                .catch(error => {\n                    setMessage(`K채ytt채j채 ${newName} oli jo poistettu.`)\n                    setErr(true)\n                    setTimeout(() => {\n                        setMessage('')\n                    }, 5000)\n                    //Render철inti??\n                    personService\n                    .getAll()\n                    .then(allPersons => {\n                        console.log('LADATAAN PALVELIMELTA')\n                        setPersons(allPersons)\n                    }) \n                })\n            }\n          }\n          reset()\n    }\n    //Resetoi tilassa olevat kent채t newName ja newNro\n    const reset = () => {\n        setNewName('')\n        setNewNro('')\n    }\n\n    const removeId = id => {\n        console.log(`tyyppi채 jonka id on ${id} halutaan poistaa`)\n        //Pyydet채채n k채ytt채j채채 varmistamaan\n        const p = persons.filter(p => p.id === id)\n        const name = p[0].name\n        const answer = window.confirm(`Poistetaanko ${name}?`)\n        if (answer) {\n            //const url = `http://localhost:3001/persons/${id}`\n            personService\n            .remove(id)\n            .then(resp => {\n                console.log(resp)\n                setPersons(persons.filter(p => p.id !== id))\n                setMessage(`Poistettiin ${name}`)\n                setErr(false)\n                setTimeout(() => {\n                    setMessage('')\n                }, 5000)\n            })\n            .catch(error => {\n                setMessage(`K채ytt채j채 ${newName} oli jo poistettu.`)\n                setErr(true)\n                setTimeout(() => {\n                    setMessage('')\n                }, 5000)\n            })\n        } else {\n            console.log('peruutettiin');\n        }\n    }\n\n    return (\n        <Container fluid>\n          <Segment inverted color='violet' textAlign='center' padded='very'>\n            <Header as='h1'>PUHELINLUETTELO</Header>\n            <Container text>\n              <Grid> \n                <Grid.Row><Grid.Column>\n                  <Kayttajaviestit message={message} err={err}/>\n                </Grid.Column></Grid.Row>\n                <Grid.Row><Grid.Column>\n                  <Rajaa search={search} handler={handleChangeSearch}/>\n                </Grid.Column></Grid.Row>\n                <Grid.Row><Grid.Column>\n                  <Uusi handleSubmit={handleSubmit} newName={newName} newNro={newNro} changeName={handleChangeName} changeNro={handleChangeNro}/>\n                </Grid.Column></Grid.Row>\n                <Grid.Row><Grid.Column>\n                  <Numerot persons={persons} search={search} removeId={removeId}/>\n                </Grid.Column></Grid.Row>\n              </Grid>\n            </Container>\n          </Segment>\n        </Container>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}